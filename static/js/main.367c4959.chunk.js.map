{"version":3,"sources":["redux/actions/index.js","redux/reducers/tareaExtra.js","redux/index.js","redux/reducers/optionsByAttribute.js","redux/reducers/actividadTareas.js","redux/reducers/actividad.js","Menu.js","Home.js","Input.js","config.js","LoadSpinner.js","FormDominio.js","Select.js","SelectAPI.js","FormActividad.js","Actividad.js","TareaSearch.js","TareaSearchResult.js","BuscarTarea.js","CheckboxGroup.js","ActionList.js","ListTareas.js","MisTareas.js","FormTareas.js","Tareas.js","utils.js","FormOption.js","FormElegirOpcion.js","FormValidElements.js","FormMultipleChoice.js","FormContador.js","FormContadores.js","TareaExtra.js","FormTarea.js","Tarea.js","graph-config.js","Graph.js","CheckBox.js","ModalTarea.js","ModalConexion.js","FlujoTareas.js","ShowActividad.js","ResolverActividad.js","ListaActividades.js","App.js","index.js"],"names":["FAIL_ATTRIBUTE","failAttribute","attribute","type","INVALIDATE_ATTRIBUTE","REQUEST_OPTIONS","requestOptions","RECEIVE_OPTIONS","receiveOptions","options","ADD_SELECT_OPTION","SELECT_TAREA","CHOOSE_TAREA","UNCHOOSE_TAREA","ADD_TAREA","addTarea","tarea","SET_RESULT_TAREAS","SET_CURRENT_ACTIVIDAD","setCurrentActividad","actividad","SET_TAREA_EXTRA","CLEAR_TAREA_EXTRA","ADD_ELEMENT_TO_EXTRA","addElementToExtra","element","REMOVE_ELEMENT_FROM_EXTRA","removeElementFromExtra","ADD_VALID_ELEMENT_TO_EXTRA","REMOVE_VALID_ELEMENT_FROM_EXTRA","removeValidElementFromExtra","ADD_BYSCORE_CRITERION","REMOVE_BYSCORE_CRITERION","ADD_SCORE_TO_CRITERION","REMOVE_SCORE_FROM_CRITERIA","ADD_DEPOSIT_TO_ELEMENT","REMOVE_DEPOSIT_FROM_ELEMENT","INIT_STATE","elements","validElements","byScore","combineReducers","optionsByAttribute","state","action","Object","assign","isFetching","didInvalidate","items","lastUpdated","receivedAt","option","actividadTareas","criteria","autor","nombre","dominio","tareasResult","selectedTareaId","chosenTareas","id","findIndex","find","filter","resultTareas","tareas","currentActividad","currentDominioId","tareaExtra","extra","name","item","code","criterion","currentCriterion","criterionName","scores","score","value","map","withoutKey","elem","elementCode","deposits","depositCode","element2","Menu","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","Item","Divider","Home","Input","props","horizontal","Form","Group","as","Row","controlId","Label","column","sm","label","Col","Control","placeholder","onChange","onKeyPress","disabled","API_BASE_URL","TIPO_SELECCION","TIPO_MULTIPLE_CHOICE","TIPO_CONTADORES","TIPO_RECOLECCION","TIPOS_EXTRA","TIPOS_OPCIONES","CONDITIONS_ARRAY","TASK_CONDITIONS_ARRAY","LoadSpinner","Button","variant","Spinner","animation","size","role","aria-hidden","FormDominio","errorMessage","error","isLoading","handleChange","bind","onClick","e","this","setState","target","preventDefault","fetch","method","body","JSON","stringify","response","json","data","errors","status","dispatch","key","InputGroup","FormControl","Text","style","marginTop","Component","connect","Select","optionsCache","defaultValue","index","field","nextProps","prevState","length","onPropsChangeLess","document","querySelector","onPropsChangeMore","SelectAPI","getElements","uri","console","FormActividad","newActividad","objetivo","idioma","tipoPlanificacion","success","handleFormSubmit","handleInput","to","Actividad","Container","border","padding","TareaSearch","criterionId","getCriteria","searchBox","TareaSearchResult","BuscarTarea","CheckboxGroup","FormGroup","marginLeft","group","FormCheckLabel","FormCheckInput","ActionList","ListGroup","input","select","checkboxGroup","ListTareas","MisTareas","nativeEvent","selectedIndex","text","selectedTarea","FormTareas","actividadId","forEach","addTareaToActividad","Tareas","useParams","getRandomSlug","rand","Math","random","toString","substring","md5","FormOption","elementName","FormElegirOpcion","FormValidElements","selectedElementId","FormMultipleChoice","handleCheck","valid","onClickElements","onClickValids","onChangeChecks","codes","split","checked","addDepositToElement","removeDepositFromElement","depositos","tipo","parseInt","codigo","recoleccion","FormContador","mensaje","message","FormContadores","onClickQuitarLink","addScoreToCriterion","criterios","TareaExtra","tipoTarea","FormTarea","newTarea","consigna","obj","hasOwnProperty","includes","criterionErrors","keys","elementErrors","processedExtra","processExtra","extraData","lastData","Tarea","EMPTY_TYPE","OPTIONAL_EMPTY_TYPE","END_TYPE","OPTIONAL_END_TYPE","START_TYPE","OPTIONAL_START_TYPE","EmptyNodeShape","viewBox","width","height","cx","cy","r","OptionalEmptyNodeShape","fill","StartShape","stroke","strokeWidth","OptionalStartShape","EndShape","d","OptionalEndShape","EdgeTypes","emptyEdge","shape","shapeId","squareEdge","x","y","NodeSubtypes","NodeTypes","emptyNode","typeText","optionalEmptyNode","start","optionalStart","end","optionalEnd","Graph","onUpdateNode","onSelectNode","viewNode","onClickNode","onSelectEdge","viewEdge","onClickEdge","onCreateNode","onDeleteNode","onConnect","onCreateEdge","onSwapEdge","onDeleteEdge","outputJumps","graph","nodes","edges","codesById","graphNodes","node","edge","source","push","forcedJumps","jump","undefined","on","saveForcedJumps","layoutEngineType","selected","GraphView","React","searchNode","searchEdge","nodeKey","i","getNodeIndex","tareaId","jumps","log","GraphConfig","ref","el","nodeTypes","nodeSubtypes","edgeTypes","HorizontalTree","onUndo","onCopySelected","onPasteSelected","conexiones","prevNodes","prevEdges","optional","newGraph","graphId","getGraph","newNodes","nodeIndex","prevNode","newEdges","conexion","origen","destino","condicion","answer","respuesta","nodeIds","neighbours","sources","getNodesWithTypeUpdated","CheckBox","ModalTarea","filterSiguientes","memoize","idTarea","findTarea","onInicialChange","initial","onUpdateTarea","onOptionalChange","onClickMostrarConexiones","showConexiones","onCondicionCheckboxChange","showCondicion","agregarConexionDisabled","onConexionChange","origenName","selectedSiguiente","onCondicionSelectChange","condicionName","selectedCondition","onAnswerTaskChange","answerTaskName","selectedAnswerTask","onClickAgregarConexion","onAddConexion","handleClose","getSelectableTareas","conexionesSiguientes","tareaHasOptions","getAnswerTaskLabel","getAnswerTareaSelect","show","Modal","onHide","centered","Header","closeButton","Title","Body","Card","md","getTareaById","ModalConexion","Footer","FlujoTareas","graphTareas","t","newConexion","graphConexiones","onResetSaltos","newSaltos","onRemoveConexion","newConexiones","con","handleShowTarea","showTarea","handleCloseTarea","handleShowConexion","conexionId","showConexion","selectedConexion","handleCloseConexion","match","params","loadTareasForActividad","createRef","saltos","color","paddingTop","paddingBottom","ShowActividad","getActividad","getTareas","ResolverActividad","ListaActividades","actividades","getActividades","App","basename","path","exact","component","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.367c4959.chunk.js","sourcesContent":["// optionsByAttribute\nexport const FAIL_ATTRIBUTE = 'FAIL_ATTRIBUTE'\n\nexport function failAttribute(attribute) {\n  return {\n    type: FAIL_ATTRIBUTE,\n    attribute\n  }\n}\n\nexport const INVALIDATE_ATTRIBUTE = 'INVALIDATE_ATTRIBUTE';\n\nexport function invalidateAttribute(attribute) {\n  return {\n    type: INVALIDATE_ATTRIBUTE,\n    attribute\n  }\n}\n\nexport const REQUEST_OPTIONS = 'REQUEST_OPTIONS'\n\nexport function requestOptions(attribute) {\n  return {\n    type: REQUEST_OPTIONS,\n    attribute\n  }\n}\n\nexport const RECEIVE_OPTIONS = 'RECEIVE_OPTIONS'\n\nexport function receiveOptions(attribute, options) {\n  return {\n    type: RECEIVE_OPTIONS,\n    attribute,\n    options\n  }\n}\n\nexport const ADD_SELECT_OPTION = 'ADD_SELECT_OPTION'\n\nexport function addSelectOption(attribute, option) {\n  return {\n    type: ADD_SELECT_OPTION,\n    attribute,\n    option\n  }\n}\n\n// actividadTareas\nexport const SELECT_TAREA = 'SELECT_TAREA'\n\nexport function selectTarea(id) {\n  return {\n    type: SELECT_TAREA,\n    id\n  }\n}\n\nexport const CHOOSE_TAREA = 'CHOOSE_TAREA'\n\nexport function chooseTarea() {\n  return {\n    type: CHOOSE_TAREA\n  }\n}\n\nexport const UNCHOOSE_TAREA = 'UNCHOOSE_TAREA'\n\nexport function unchooseTarea(id) {\n  return {\n    type: UNCHOOSE_TAREA,\n    id\n  }\n}\n\nexport const ADD_TAREA = 'ADD_TAREA'\n\nexport function addTarea(tarea) {\n  return {\n    type: ADD_TAREA,\n    tarea\n  }\n}\n\nexport const SET_RESULT_TAREAS = \"SET_RESULT_TAREAS\"\n\nexport function setResultTareas(tareas) {\n  return {\n    type: SET_RESULT_TAREAS,\n    tareas\n  } \n}\n\n//actividad\nexport const SET_CURRENT_ACTIVIDAD = \"SET_CURRRENT_ACTIVIDAD\"\n\nexport function setCurrentActividad(actividad) {\n  return {\n    type: SET_CURRENT_ACTIVIDAD,\n    actividad\n  }\n}\n\n//tareaExtra\nexport const SET_TAREA_EXTRA = \"SET_TAREA_EXTRA\"\n\nexport function setTareaExtra(extra) {\n  return {\n    type: SET_TAREA_EXTRA,\n    extra\n  }\n}\n\nexport const CLEAR_TAREA_EXTRA = \"CLEAR_TAREA_EXTRA\"\n\nexport function clearTareaExtra() {\n  return {\n    type: CLEAR_TAREA_EXTRA\n  }\n}\n\nexport const ADD_ELEMENT_TO_EXTRA = \"ADD_ELEMENT_TO_EXTRA\"\n\nexport function addElementToExtra(element) {\n  return {\n    type: ADD_ELEMENT_TO_EXTRA,\n    element\n  }\n}\n\nexport const REMOVE_ELEMENT_FROM_EXTRA = \"REMOVE_ELEMENT_FROM_EXTRA\"\n\nexport function removeElementFromExtra(element) {\n  return {\n    type: REMOVE_ELEMENT_FROM_EXTRA,\n    element\n  }\n}\n\nexport const ADD_VALID_ELEMENT_TO_EXTRA = \"ADD_VALID_ELEMENT_TO_EXTRA\"\n\nexport function addValidElementToExtra(element) {\n  return {\n    type: ADD_VALID_ELEMENT_TO_EXTRA,\n    element\n  }\n}\n\nexport const REMOVE_VALID_ELEMENT_FROM_EXTRA = \"REMOVE_VALID_ELEMENT_FROM_EXTRA\"\n\nexport function removeValidElementFromExtra(element) {\n  return {\n    type: REMOVE_VALID_ELEMENT_FROM_EXTRA,\n    element\n  }\n}\n\nexport const ADD_BYSCORE_CRITERION = \"ADD_BYSCORE_CRITERION\"\n\nexport function addByScoreCriterion(criterion) {\n  return {\n    type: ADD_BYSCORE_CRITERION,\n    criterion\n  }\n}\n\nexport const REMOVE_BYSCORE_CRITERION = \"REMOVE_BYSCORE_CRITERION\"\n\nexport function removeByScoreCriterion(criterion) {\n  return {\n    type: REMOVE_BYSCORE_CRITERION,\n    criterion\n  }\n}\n\nexport const ADD_SCORE_TO_CRITERION = \"ADD_SCORE_TO_CRITERION\"\n\nexport function addScoreToCriterion(score, criterionName) {\n  return {\n    type: ADD_SCORE_TO_CRITERION,\n    score,\n    criterionName\n  }\n}\n\nexport const REMOVE_SCORE_FROM_CRITERIA = \"REMOVE_SCORE_FROM_CRITERIA\"\n\nexport function removeScoreFromCriteria(code){\n  return {\n    type: REMOVE_SCORE_FROM_CRITERIA,\n    code\n  }\n}\n\nexport const ADD_DEPOSIT_TO_ELEMENT = \"ADD_DEPOSIT_TO_ELEMENT\"\n\nexport function addDepositToElement(elementCode, depositCode) {\n  return {\n    type: ADD_DEPOSIT_TO_ELEMENT,\n    elementCode,\n    depositCode\n  }\n}\n\nexport const REMOVE_DEPOSIT_FROM_ELEMENT = \"REMOVE_DEPOSIT_FROM_ELEMENT\"\n\nexport function removeDepositFromElement(elementCode, depositCode) {\n  return {\n    type: REMOVE_DEPOSIT_FROM_ELEMENT,\n    elementCode,\n    depositCode\n  }\n}","import {\n    SET_TAREA_EXTRA, CLEAR_TAREA_EXTRA, ADD_ELEMENT_TO_EXTRA, REMOVE_ELEMENT_FROM_EXTRA,\n    ADD_VALID_ELEMENT_TO_EXTRA, REMOVE_VALID_ELEMENT_FROM_EXTRA, ADD_BYSCORE_CRITERION,\n    ADD_SCORE_TO_CRITERION, REMOVE_SCORE_FROM_CRITERIA, REMOVE_BYSCORE_CRITERION,\n    ADD_DEPOSIT_TO_ELEMENT,\n    REMOVE_DEPOSIT_FROM_ELEMENT\n} from '../actions'\nconst INIT_STATE = {\n    elements: [],\n    validElements: [],\n    byScore: []\n};\n\nexport default function tareaExtra(state = INIT_STATE, action) {\n    switch (action.type) {\n        case SET_TAREA_EXTRA:\n            return {\n                ...state,\n                extra: action.extra\n            };\n        case CLEAR_TAREA_EXTRA:\n            return INIT_STATE\n        case ADD_ELEMENT_TO_EXTRA:\n            let index = state.elements.findIndex(element => element.name === action.element.name);\n\n            if (index !== -1)\n                return state;\n\n            return {\n                ...state,\n                elements: [...state.elements, action.element]\n            }\n        case REMOVE_ELEMENT_FROM_EXTRA:\n            return {\n                ...state,\n                elements: state.elements.filter((item) => item.code !== action.element.code),\n                validElements: state.validElements.filter((item) => item !== action.element.code)\n            }\n        case ADD_VALID_ELEMENT_TO_EXTRA:\n            let validIndex = state.validElements.findIndex(element => element === action.element);\n\n            if (validIndex !== -1)\n                return state;\n\n            return {\n                ...state,\n                validElements: [...state.validElements, action.element]\n            }\n        case REMOVE_VALID_ELEMENT_FROM_EXTRA:\n            return {\n                ...state,\n                validElements: state.validElements.filter((item) => item !== action.element)\n            }\n        case ADD_BYSCORE_CRITERION:\n            let criterionIndex = state.byScore.findIndex(item => item.name === action.criterion.name);\n\n            if (criterionIndex !== -1)\n                return state\n\n            return {\n                ...state,\n                byScore: [...state.byScore, action.criterion],\n            }\n        case REMOVE_BYSCORE_CRITERION:\n            return {\n                ...state,\n                byScore: state.byScore.filter(item => item.name !== action.criterion.name)\n            }\n        case ADD_SCORE_TO_CRITERION:\n            let currentCriterion = state.byScore.find(item => item.name === action.criterionName)\n            let criterion = {\n                ...currentCriterion,\n                scores: {\n                    ...currentCriterion.scores,\n                    [action.score.code]: action.score.value\n                }\n            }\n            return {\n                ...state,\n                byScore: state.byScore.map(item => {\n                    if (item.name !== action.criterionName) { return item }\n                    else { return criterion }\n                })\n            }\n        case REMOVE_SCORE_FROM_CRITERIA:\n            let scores = state.byScore.map(item => {\n                const { [action.code]: value, ...withoutKey } = item.scores\n                return {\n                    ...item,\n                    scores: withoutKey\n                }\n            });\n            return {\n                ...state,\n                byScore: scores\n            }\n        case ADD_DEPOSIT_TO_ELEMENT:\n            const element = state.elements.find(elem => elem.code === action.elementCode);\n            if (element.deposits) {\n                const depositIndex = element.deposits.findIndex(elem => elem === action.depositCode);\n                if (depositIndex !== -1) {\n                    return state\n                }\n            } else {\n                element.deposits = []\n            }\n            element.deposits = [...element.deposits, action.depositCode];\n            return {\n                ...state,\n                elements: state.elements.map(elem => {\n                    if (elem.code !== action.elementCode) { return elem }\n                    else { return element }\n                })\n            }\n        case REMOVE_DEPOSIT_FROM_ELEMENT:\n            const element2 = state.elements.find(elem => elem.code === action.elementCode);\n            element2.deposits = element2.deposits.filter(elem => elem !== action.depositCode);\n            if (element2.deposits) {\n                return {\n                    ...state,\n                    elements: state.elements.map(elem => {\n                        if (elem.code !== action.elementCode) { return elem }\n                        else { return element2 }\n                    })\n                }\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport optionsByAttribute from './reducers/optionsByAttribute';\nimport actividadTareas from './reducers/actividadTareas';\nimport actividad from './reducers/actividad';\nimport tareaExtra from './reducers/tareaExtra';\n\nexport default combineReducers({\n    optionsByAttribute,\n    actividadTareas,\n    actividad,\n    tareaExtra\n})","import { INVALIDATE_ATTRIBUTE, REQUEST_OPTIONS, RECEIVE_OPTIONS, FAIL_ATTRIBUTE, ADD_SELECT_OPTION } from '../actions'\n\nfunction options(\n    state = {\n        isFetching: false,\n        didInvalidate: false,\n        items: []\n    },\n    action\n) {\n    switch (action.type) {\n        case FAIL_ATTRIBUTE:\n            return { ...state, isFetching: false }\n        case INVALIDATE_ATTRIBUTE:\n            return { ...state, didInvalidate: true }\n        case REQUEST_OPTIONS:\n            return { ...state, isFetching: true, didInvalidate: false }\n        case RECEIVE_OPTIONS:\n            return {\n                ...state,\n                isFetching: false,\n                didInvalidate: false,\n                items: action.options,\n                lastUpdated: action.receivedAt\n            }\n        case ADD_SELECT_OPTION:\n            return {\n                ...state,\n                items: [...state.items, action.option]\n            }\n        default:\n            return state\n    }\n}\n\nexport default function optionsByAttribute(state = {}, action) {\n    switch (action.type) {\n        case INVALIDATE_ATTRIBUTE:\n        case RECEIVE_OPTIONS:\n        case REQUEST_OPTIONS:\n        case ADD_SELECT_OPTION:\n            return Object.assign({}, state, {\n                [action.attribute]: options(state[action.attribute], action)\n            })\n        default:\n            return state\n    }\n}","import {\n    CHOOSE_TAREA, SELECT_TAREA, UNCHOOSE_TAREA,\n    ADD_TAREA, SET_RESULT_TAREAS\n} from '../actions'\n\nexport default function actividadTareas(\n    state = {\n        criteria: {\n            autor: '',\n            nombre: '',\n            dominio: '',\n        },\n        tareasResult: [\n        ],\n        selectedTareaId: \"\",\n        chosenTareas: []\n    }, action\n) {\n    switch (action.type) {\n        case SELECT_TAREA:\n            return {\n                ...state,\n                selectedTareaId: action.id\n            }\n        case CHOOSE_TAREA:\n            let index = state.chosenTareas.findIndex(tarea => tarea.id === state.selectedTareaId);\n\n            if (index !== -1)\n                return state;\n\n            const tarea = state.tareasResult.find((tarea) => tarea.id === state.selectedTareaId);\n            return {\n                ...state,\n                chosenTareas: [...state.chosenTareas, tarea]\n            }\n        case UNCHOOSE_TAREA:\n            return {\n                ...state,\n                chosenTareas: state.chosenTareas.filter((tarea) => tarea.id !== action.id)\n            }\n        case ADD_TAREA:\n            const tareaIndex = state.chosenTareas.findIndex(tarea => tarea.nombre === action.tarea.nombre)\n            if(tareaIndex !== -1){\n                return state;\n            }\n            return {\n                ...state,\n                chosenTareas: [...state.chosenTareas, action.tarea]\n            }\n        case SET_RESULT_TAREAS:\n            return {\n                ...state,\n                resultTareas: action.tareas\n            }\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_ACTIVIDAD } from '../actions'\nexport default function actividad (state={\n    currentActividad: {},\n    currentDominioId: \"\"\n}, action) {\n    switch (action.type) {\n        case SET_CURRENT_ACTIVIDAD:\n            return {...state, \n                currentActividad: action.actividad}\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\n\nfunction Menu() {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"/\">Autores Demo</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"/#/actividades/\">Lista Actividades</Nav.Link>\n                    <Nav.Link href=\"/#/nuevaActividad/\">Crear Actividad</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Menu;","import React from 'react';\n\nfunction Home() {\n    return <div>Página principal, con su top de descargas y demás</div>\n}\n\nexport default Home","import React from 'react';\nimport { Form, Row, Col } from 'react-bootstrap';\n\nfunction Input(props) {\n    return (\n        <div>\n            {\n                props.horizontal ?\n                    <Form.Group as={Row} controlId={props.controlId}>\n                        <Form.Label column sm={3}>\n                            {props.label}\n                        </Form.Label>\n                        <Col sm={9}>\n                            <Form.Control type={props.type}\n                                placeholder={props.placeholder}\n                                onChange={props.onChange}\n                                onKeyPress={props.onKeyPress}\n                                name={props.name}\n                                disabled={props.disabled}\n                            />\n                        </Col>\n                    </Form.Group>\n                    :\n                    <Form.Group controlId={props.controlId}>\n                        { props.label &&\n                            <Form.Label>{props.label}</Form.Label>\n                        }\n                        <Form.Control type={props.type}\n                            placeholder={props.placeholder}\n                            onChange={props.onChange}\n                            onKeyPress={props.onKeyPress}\n                            name={props.name}\n                            disabled={props.disabled}\n                        //className=\"form-input\"\n                        />\n                    </Form.Group>\n            }\n        </div>\n    )\n}\n\nexport default Input;","export const API_BASE_URL = 'https://autores-demo-mock-api.herokuapp.com/api/v1.0';\n\nexport const TIPO_SELECCION = \"5\";\nexport const TIPO_MULTIPLE_CHOICE = \"6\";\nexport const TIPO_CONTADORES = \"7\";\nexport const TIPO_RECOLECCION = \"8\";\n\nexport const TIPOS_EXTRA = [TIPO_SELECCION, TIPO_MULTIPLE_CHOICE, TIPO_CONTADORES, TIPO_RECOLECCION];\nexport const TIPOS_OPCIONES = [TIPO_SELECCION, TIPO_MULTIPLE_CHOICE, TIPO_RECOLECCION];\n\nexport const TIPO_DEPOSITO = \"9\";\n\nexport const CONDITIONS_ARRAY = [{ name: \"SÍ se elige\", code: \"YES\" },\n{ name: \"NO se elige\", code: \"NO\" },\n{ name: \"SÍ se pasó por\", code: \"YES_START\" },\n{ name: \"NO se pasó por\", code: \"NO_START\" }]\n\nexport const TASK_CONDITIONS_ARRAY = [{ name: \"SÍ se pasó por\", code: \"YES_START\" },\n{ name: \"NO se pasó por\", code: \"NO_START\" }]","import React from 'react';\nimport { Spinner, Button, Form } from 'react-bootstrap'\n\nfunction LoadSpinner() {\n    return (\n        <Form.Control as={Button} variant=\"Light\" disabled>\n            <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n            />\n            Cargando...\n        </Form.Control>\n    )\n}\n\nexport default LoadSpinner","import React, { Component } from 'react';\nimport { InputGroup, FormControl, Button, Form, Col, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { addSelectOption } from './redux/actions'\n\nimport { API_BASE_URL } from './config'\nimport LoadSpinner from './LoadSpinner'\n\nconst HTTP_CREATED = 201;\nclass FormDominio extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dominio: '',\n            errorMessage: '',\n            error: false,\n            isLoading: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onKeyPress = this.onKeyPress.bind (this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            dominio: e.target.value\n        })\n    }\n\n    async onClick(e) {\n        e.preventDefault();\n        this.setState({\n            isLoading: true,\n            error: false,\n            errorMessage: ''\n        });\n\n        const response = await fetch(API_BASE_URL + '/dominios', {\n            method: 'POST',\n            body: JSON.stringify({\n                \"nombre\": this.state.dominio\n            })\n        });\n        const data = await response.json();\n\n        if (data.errors) {\n            this.setState({\n                isLoading: false,\n                error: true,\n                errorMessage: data.errors\n            });\n        } else {\n            if(response.status === HTTP_CREATED) {\n                this.props.dispatch(addSelectOption(\"dominio\", data));\n            }\n            this.setState({\n                dominio: '',\n                isLoading: false,\n                error: false,\n                errorMessage: ''\n            });\n        }\n    }\n\n    onKeyPress(e) {\n        if(e.key === \"Enter\") {\n            if (this.state.dominio !== \"\") {\n                this.onClick(e);\n            }\n        } \n    }\n\n    render() {\n        return (\n            <Col>\n                <Row>\n                    <Col>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl type=\"text\" value={this.state.dominio} placeholder=\"Nuevo dominio\" onChange={this.handleChange} onKeyPress={this.onKeyPress}/>\n                            <span className=\"input-group-btn\">\n                                {this.state.isLoading ?\n                                    <LoadSpinner />\n                                    :\n                                    <Button variant=\"success\" disabled={this.state.dominio === \"\"} type=\"button\" onClick={this.onClick}>\n                                        Agregar\n                                    </Button>\n                                }\n                            </span>\n                        </InputGroup>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        {this.state.error &&\n                            <Form.Text className=\"text-danger\" style={{ marginTop: \"-1em\" }}>\n                                {this.state.errorMessage}\n                            </Form.Text>\n                        }\n                    </Col>\n                </Row>\n            </Col>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { optionsByAttribute } = state\n\n    return {\n        optionsByAttribute\n    }\n}\n\nexport default connect(mapStateToProps)(FormDominio);\n\n\n\n\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap'\n\nclass Select extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            optionsCache: this.props.options,\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (prevState.optionsCache.length > nextProps.options.length) {\n            if (nextProps.onPropsChangeLess) {\n                nextProps.onPropsChangeLess();\n                document.querySelector(\"#\" + nextProps.controlId).value = \"\";\n            }\n            return {\n                optionsCache: nextProps.options\n            }\n        }\n        if (prevState.optionsCache.length < nextProps.options.length) {\n            if (nextProps.onPropsChangeMore) {\n                let value = 0\n                if(nextProps.value) {\n                    value = nextProps.options[nextProps.options.length - 1][nextProps.value];\n                } else {\n                   value = nextProps.options[nextProps.options.length - 1];\n                }\n                document.querySelector(\"#\" + nextProps.controlId).value = value;\n                nextProps.onPropsChangeMore(value);\n            }\n            return {\n                optionsCache: nextProps.options\n            }\n        }\n        return null\n    }\n\n\n    render() {\n        const { props } = this;\n        return (\n            <Form.Group controlId={props.controlId}>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <Form.Control defaultValue={props.defaultValue} as=\"select\" name={props.name} onChange={props.onChange} disabled={props.disabled}>\n                    {props.placeholder && <option value=\"\" disabled>{props.placeholder}</option>}\n                    {props.options.map((item, index) =>\n                        <option value={props.value ? item[props.value] : item} key={index}>{props.field ? item[props.field] : item}</option>\n                    )}\n                </Form.Control>\n            </Form.Group>\n        )\n    }\n}\n\nexport default Select","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { requestOptions, receiveOptions, failAttribute } from './redux/actions'\n\nimport Select from './Select';\nimport LoadSpinner from './LoadSpinner';\nimport { API_BASE_URL } from './config'\n\nclass SelectAPI extends Component {\n\n    componentDidMount() {\n        this.getElements();\n    }\n\n    async getElements() {\n        const { dispatch, optionsByAttribute, attribute } = this.props\n        if (!optionsByAttribute[attribute]) {\n            try {\n                dispatch(requestOptions(attribute));\n                const response = await fetch(API_BASE_URL + this.props.uri);\n                const data = await response.json();\n                dispatch(receiveOptions(attribute, data))\n            } catch (err) {\n                dispatch(failAttribute(attribute))                \n                console.error(err);\n            }\n        }\n    }\n\n    render() {\n        const { optionsByAttribute, attribute } = this.props;\n        return (\n            <div>\n                {optionsByAttribute[attribute] && optionsByAttribute[attribute].isFetching &&\n                    <LoadSpinner/>\n                }\n                {optionsByAttribute[attribute] && !optionsByAttribute[attribute].isFetching && optionsByAttribute[attribute].items !== [] &&\n                    <Select\n                        controlId={this.props.controlId}\n                        label={this.props.label}\n                        name={this.props.name}\n                        options={optionsByAttribute[attribute].items}\n                        defaultValue={this.props.defaultValue}\n                        value={\"id\"}\n                        field={\"nombre\"}\n                        placeholder={this.props.placeholder}\n                        onPropsChangeMore={this.props.onPropsChangeMore}\n                        onChange={this.props.onChange} />\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { optionsByAttribute } = state\n  \n    return {\n        optionsByAttribute\n    }\n  }\n\nexport default connect(mapStateToProps)(SelectAPI);\n\n","import React, { Component } from 'react';\nimport { Form, Button, Col, Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setCurrentActividad } from './redux/actions'\n\nimport Input from './Input';\nimport FormDominio from './FormDominio';\nimport SelectAPI from './SelectAPI';\n\nimport { API_BASE_URL } from './config';\n\nclass FormActividad extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newActividad: {\n                nombre: '',\n                objetivo: '',\n                idioma: '',\n                tipoPlanificacion: '',\n                dominio: '',\n            },\n            isLoading: false,\n            success: false,\n            error: false,\n            errorMessage: \"\"\n        }\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    async handleFormSubmit(e) {\n        const { nombre, objetivo, idioma, tipoPlanificacion, dominio } = this.state.newActividad;\n        e.preventDefault();\n        this.setState({\n            isLoading: true,\n            error: false,\n            errorMessage: ''\n        });\n        if (nombre === \"\") {\n            this.setState({\n                errorMessage: \"Falta nombre\",\n                error: true,\n                isLoading: false,\n            })\n            return;\n        }\n        if (objetivo === \"\") {\n            this.setState({\n                errorMessage: \"Falta objetivo\",\n                error: true,\n                isLoading: false,\n            })\n            return;\n        }\n        if (idioma === \"\") {\n            this.setState({\n                errorMessage: \"Falta idioma\",\n                error: true,\n                isLoading: false,\n            })\n            return;\n        }\n        if (dominio === \"\") {\n            this.setState({\n                errorMessage: \"Falta dominio\",\n                error: true,\n                isLoading: false,\n            })\n            return;\n        }\n        if (tipoPlanificacion === \"\") {\n            this.setState({\n                errorMessage: \"Falta planificación\",\n                error: true,\n                isLoading: false,\n            })\n            return;\n        }\n\n        let response = await fetch(API_BASE_URL + '/actividades', {\n            method: 'POST',\n            body: JSON.stringify({\n                \"nombre\": nombre,\n                \"objetivo\": objetivo,\n                \"dominio\": dominio,\n                \"idioma\": idioma,\n                \"tipoPlanificacion\": tipoPlanificacion\n            })\n        });\n        const data = await response.json();\n        if (data.errors) {\n            this.setState({\n                isLoading: false,\n                error: true,\n                errorMessage: data.errors\n            });\n            return\n        }\n        this.setState({\n            success: true,\n            isLoading: false,\n            error: false,\n            errorMessage: ''\n        });\n        this.props.dispatch(setCurrentActividad(data));\n    }\n\n    handleInput(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState({\n            newActividad: {\n                ...this.state.newActividad, [name]: value\n            }\n        });\n    }\n\n    onPropsChangeMore = (value) => {\n        const {newActividad} = this.state;\n        newActividad.dominio = value;\n        this.setState({\n            newActividad: newActividad\n        })\n    }\n\n    render() {\n        return (\n            <Form>\n                <Form.Row>\n                    <Col>\n                        <Input controlId={\"formNombre\"}\n                            label={\"Nombre\"}\n                            name={\"nombre\"}\n                            type={\"text\"}\n                            placeholder={\"Nombre\"}\n                            onChange={this.handleInput} />\n                    </Col>\n                    <Col>\n                        <Input controlId={\"formObjetivo\"}\n                            label={\"Objetivo\"}\n                            name={\"objetivo\"}\n                            type={\"text\"}\n                            placeholder={\"Objetivo\"}\n                            onChange={this.handleInput} />\n                    </Col>\n                </Form.Row>\n\n                <Form.Row>\n                    <Col>\n                        <SelectAPI\n                            uri={\"/idiomas\"}\n                            attribute={\"idioma\"}\n                            controlId={\"formIdioma\"}\n                            label={\"Idioma\"}\n                            name={\"idioma\"}\n                            defaultValue={\"\"}\n                            placeholder={\"Elegí un idioma\"}\n                            onChange={this.handleInput}\n                        />\n                    </Col>\n                    <Col>\n                        <SelectAPI\n                            uri={'/tipos-planificacion'}\n                            attribute={\"tipo-planificacion\"}\n                            controlId={\"formTipoPlanificacion\"}\n                            label={\"Tipo de planificación\"}\n                            name={\"tipoPlanificacion\"}\n                            defaultValue={\"\"}\n                            placeholder={\"Elegí un tipo\"}\n                            onChange={this.handleInput}\n                        />\n                    </Col>\n                </Form.Row>\n                <Form.Row>\n                    <Col>\n                        <SelectAPI\n                            uri={'/dominios'}\n                            attribute={\"dominio\"}\n                            controlId={\"formDominio\"}\n                            label={\"Dominio\"}\n                            name={\"dominio\"}\n                            defaultValue={this.props.currentDominioId}\n                            placeholder={\"Elegí un dominio\"}\n                            onChange={this.handleInput}\n                            onPropsChangeMore={this.onPropsChangeMore}\n                        />\n                    </Col>\n                    <Col></Col>\n                </Form.Row>\n                <Form.Row>\n                    <FormDominio/>\n                    <Col></Col>\n                </Form.Row>\n                {this.state.error &&\n                    <Form.Text className=\"text-danger\" style={{ marginTop: \"-1em\" }}>\n                        {this.state.errorMessage}\n                    </Form.Text>\n                }\n                {this.state.isLoading ?\n                    <Button variant=\"info\" disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                        Cargando...\n                    </Button>\n                    :\n                    this.state.success ?\n                        <Link to={\"/actividad/\" + this.props.currentActividad.id}>\n                            <Button variant=\"primary\" type=\"button\" onClick={() => { }} >Continuar</Button>\n                        </Link>\n                        :\n                        <Button variant=\"info\" type=\"button\" disabled={this.state.success} onClick={this.handleFormSubmit}>\n                            Guardar\n                        </Button>\n                }\n            </Form>\n\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { actividad } = state\n    const { currentActividad, currentDominioId } = actividad\n    return {\n        currentActividad, \n        currentDominioId\n    }\n}\n\nexport default connect(mapStateToProps)(FormActividad);","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap'\n\nimport FormActividad from './FormActividad'\n\nfunction Actividad() {\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h2>Actividad</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col style={{ border: \"1px solid black\", padding: \"2em\" }}>\n                    <FormActividad />\n                </Col>\n            </Row>\n        </Container >\n    )\n}\n\nexport default Actividad","import React, { Component } from 'react';\nimport { Row, Col, FormControl, InputGroup } from 'react-bootstrap';\n\nimport Input from './Input';\nimport SelectAPI from './SelectAPI';\nimport Select from './Select';\n\nclass TareaSearch extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            criterionId: \"\"\n        }\n    }\n\n    getCriteria() {\n        return [\n            { id: \"1\", nombre: \"Por autor\" },\n            { id: \"2\", nombre: \"Por nombre\" },\n            { id: \"3\", nombre: \"Por dominio\" }\n        ];\n    }\n\n    searchBox() {\n        switch (this.state.criterionId) {\n            case \"1\":\n                return (\n                    <Input\n                        type={\"text\"}\n                        placeholder={\"Autor\"}\n                        onChange={this.handleInput} />\n                );\n            case \"2\":\n                return (\n                    <Input\n                        type={\"text\"}\n                        placeholder={\"Nombre\"}\n                        onChange={this.handleInput} />\n                );\n            case \"3\":\n                return (\n                    <SelectAPI\n                        uri={'/dominios'}\n                        attribute={\"dominio\"}\n                        controlId={\"formDominio\"}\n                        name={\"dominio\"}\n                        defaultValue={\"\"}\n                        placeholder={\"Elegí un dominio\"}\n\n                    />\n                )\n            default:\n                return (\n                    <FormControl type=\"text\" placeholder=\"Elegí un criterio primero\" disabled />\n                );\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({\n            criterionId: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                    <Select\n                        controlId={\"searchCriteria\"}\n                        name={\"searchCriteria\"}\n                        options={this.getCriteria()}\n                        defaultValue={\"\"}\n                        value={\"id\"}\n                        field={\"nombre\"}\n                        placeholder={\"Elegí un criterio\"}\n                        onChange={this.onChange} />\n                </Col>\n                <Col>\n                    {this.searchBox()}\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default TareaSearch;","import React, { Component } from 'react';\nimport { InputGroup, Button, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { selectTarea, chooseTarea, setCurrentActividad } from './redux/actions'\n\nimport Select from './Select'\n\nclass TareaSearchResult extends Component {\n\n    onChange = (e) => {\n        this.props.dispatch(selectTarea(e.target.value));\n    }\n\n    onClick = (e) => {\n        const { dispatch, selectedTareaId } = this.props;\n        selectedTareaId !== \"\" && dispatch(chooseTarea())\n    }\n\n    render() {\n        const { tareasResult, selectedTareaId } = this.props;\n        return (\n            <Col>\n                <h4>Resultados</h4>\n                <InputGroup>\n                    <Select\n                        defaultValue={\"\"}\n                        placeholder={\"Elegí una tarea\"}\n                        value={\"id\"}\n                        field={\"nombre\"}\n                        options={tareasResult}\n                        onChange={this.onChange}\n                    />\n                    <span>\n                        <Button variant=\"info\" type=\"button\" onClick={this.onClick} disabled={selectedTareaId === \"\"} >\n                            Agregar\n                        </Button>\n                    </span>\n                </InputGroup>\n            </Col>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { actividadTareas } = state\n    const { tareasResult, selectedTareaId } = actividadTareas;\n\n    return {\n        tareasResult, selectedTareaId\n    }\n}\n\nexport default connect(mapStateToProps)(TareaSearchResult);","import React from 'react';\nimport {  } from 'react-bootstrap'\n\nimport TareaSearch from './TareaSearch';\nimport TareaSearchResult from './TareaSearchResult';\n\nexport default function BuscarTarea(props) {\n    return (\n        <div>\n            <h2>Buscar Tarea</h2>\n            <TareaSearch />\n        </div>\n    )\n}","import React from 'react';\nimport { FormGroup } from 'react-bootstrap'\nimport FormCheckInput from 'react-bootstrap/FormCheckInput';\nimport FormCheckLabel from 'react-bootstrap/FormCheckLabel';\n\nfunction CheckboxGroup(props) {\n    return (\n        <>\n            {props.label && <p><i>{props.label}</i></p>}\n            {\n                props.items.map(item =>\n                    <FormGroup style={{ marginLeft: \"1em\" }} key={(props.value ? item[props.value] : item) + '-' + props.group}>\n                        <FormCheckLabel>\n                            <FormCheckInput type={\"checkbox\"} onChange={props.onChange} name={(props.value ? item[props.value] : item) + '-' + props.group} />\n                            {props.field ? item[props.field] : item}\n                        </FormCheckLabel>\n                    </FormGroup>\n                )\n            }\n        </>\n    )\n}\n\nexport default CheckboxGroup;","import React from 'react';\nimport { ListGroup, Col, Form, Row, Button } from 'react-bootstrap';\n\nimport Select from './Select'\nimport CheckboxGroup from './CheckboxGroup';\n\nfunction ActionList(props) {\n    return (\n        <ListGroup>\n            {\n                props.items.map((item) =>\n                    <ListGroup.Item key={(props.value ? item[props.value] : item) + (props.group ? \"-\" + props.group : \"\")}>\n                        {props.input ?\n                            <Form.Group as={Row} controlId={(props.value ? item[props.value] : item) + (props.group ? \"-\" + props.group : \"\")}>\n                                <Form.Label column sm={3}>\n                                    {props.field ? item[props.field] : item}\n                                </Form.Label>\n                                <Col sm={9}>\n                                    <Form.Control type={props.input.type} placeholder={props.input.placeholder}\n                                        onChange={props.input.onChange} name={(props.value ? item[props.value] : item) + (props.group ? \"-\" + props.group : \"\")}\n                                    />\n                                </Col>\n                            </Form.Group>\n                            :\n                            props.field ? item[props.field] : item}\n                        {\n                            props.select &&\n                            <Select options={props.select.options} field={props.select.field}\n                                placeholder={props.select.placeholder} defaultValue={props.select.defaultValue}\n                                name={(props.value ? item[props.value] : item)} onChange={props.select.onChange}\n                            />\n                        }\n                        {\n                            props.checkboxGroup &&\n                            <CheckboxGroup items={props.checkboxGroup.items} onChange={props.checkboxGroup.onChange}\n                                field={props.checkboxGroup.field} value={props.checkboxGroup.value} label={props.checkboxGroup.label} group={(props.value ? item[props.value] : item)} />\n                        }\n                        {props.action &&\n                            < Button variant=\"danger\" type=\"button\" className=\"float-right\"\n                                onClick={() => props.onClick(item, props.group)}>\n                                Quitar\n                            </Button>\n                        }\n                    </ListGroup.Item>\n                )\n            }\n        </ListGroup >\n    )\n}\n\nexport default ActionList;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { unchooseTarea } from './redux/actions'\n\nimport ActionList from './ActionList';\n\nclass ListTareas extends Component {\n\n    onClick = (item) => {\n        this.props.dispatch(unchooseTarea(item.id));\n    }\n\n    render() {\n        const { chosenTareas } = this.props;\n        return (\n            <div>\n                <h2>Tareas de la actividad</h2>\n                <ActionList items={chosenTareas} action={true} onClick={this.onClick} field={\"nombre\"} value={\"id\"}/>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { actividadTareas } = state\n    const { chosenTareas } = actividadTareas;\n  \n    return {\n        chosenTareas\n    }\n  }\n\nexport default connect(mapStateToProps)(ListTareas);","import React, { Component } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { addTarea } from './redux/actions'\n\nimport SelectAPI from './SelectAPI';\nimport { API_BASE_URL } from './config'\n\nclass MisTareas extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTarea: {\n                nombre: \"\",\n                id: \"\"\n            }\n        }\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onChange = (e) => {\n        const index = e.nativeEvent.target.selectedIndex;\n        const nombre = e.nativeEvent.target[index].text\n        const tarea = {\n            nombre: nombre,\n            id: e.target.value\n        }\n        this.setState({\n            selectedTarea: tarea\n        })\n    }\n\n    async onClick(e) {\n        if (this.state.selectedTarea.id !== \"\") {\n            const response = await fetch(API_BASE_URL + '/tareas/' + this.state.selectedTarea.id);\n            const data = await response.json();\n            this.props.dispatch(addTarea(data));\n        }\n    }\n\n    render() {\n        const { currentActividad } = this.props\n        return (\n            <>\n                <h2>Mis tareas{\" \"}\n                    <Link to={\"/actividad/\" + currentActividad.id + \"/nuevaTarea\"} >\n                        <Button variant=\"success\" type=\"button\">Nueva</Button>\n                    </Link>\n                </h2>\n                <Row>\n                    <Col>\n                        <SelectAPI\n                            uri={'/tareas'}\n                            attribute={\"tarea\"}\n                            controlId={\"formTarea\"}\n                            label={\"\"}\n                            name={\"tarea\"}\n                            defaultValue={\"\"}\n                            placeholder={\"Elegí una tarea\"}\n                            onChange={this.onChange}\n                        />\n                    </Col>\n                    <Col>\n                        <span>\n                            <Button className=\"float-left\" variant=\"info\" type=\"button\"\n                                onClick={this.onClick} disabled={this.state.selectedTarea.id === \"\"} >\n                                Agregar\n                            </Button>\n                        </span>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { currentActividad } = state.actividad\n    return {\n        currentActividad\n    }\n}\n\nexport default connect(mapStateToProps)(MisTareas);","import React, { Component } from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCurrentActividad } from './redux/actions'\n\nimport BuscarTarea from './BuscarTarea';\nimport ListTareas from './ListTareas';\nimport MisTareas from './MisTareas';\n\nimport { API_BASE_URL } from './config';\n\nclass FormTareas extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            success: false,\n            error: false,\n            errorMessage: \"\"\n        }\n        let id = this.props.actividadId;\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.setCurrentActividad(id);\n    }\n\n    async setCurrentActividad(id) {\n        const response = await fetch(API_BASE_URL + '/actividades/' + id);\n        const data = await response.json();\n        if (data.errors) {\n            this.setState({\n                error: true,\n                errorMessage: data.errors\n            });\n            return;\n        }\n        this.props.dispatch(setCurrentActividad(data));\n    }\n\n    async addTareaToActividad(id, tarea) {\n        const response = await fetch(API_BASE_URL + '/actividades/' + id + '/tareas', {\n            method: 'POST',\n            body: JSON.stringify({\n                \"tarea\": tarea.id\n            })\n        });\n        const data = await response.json();\n        if (data.errors) {\n            this.setState({\n                error: true,\n                errorMessage: data.errors,\n                success: false\n            })\n            return;\n        } else {\n            this.setState({success: true});\n        }\n    }\n\n    handleFormSubmit() {\n        const id = this.props.actividadId;\n        this.props.chosenTareas.forEach(tarea => this.addTareaToActividad(id, tarea));\n    }\n\n    render() {\n        return (\n            <>\n                <BuscarTarea />\n                <MisTareas />\n                <ListTareas />\n\n                {\n                    this.state.isLoading ?\n                        <Button variant=\"info\" disabled>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            Cargando...\n                    </Button>\n                        :\n                        this.state.success ?\n                            <Link to={\"/actividad/\" + this.props.actividadId + \"/flujo\"}>\n                                <Button variant=\"primary\" type=\"button\" style={{ marginTop: \"1em\" }}>Continuar</Button>\n                            </Link>\n                            :\n                            <Button variant=\"info\" type=\"button\" disabled={this.state.success} onClick={this.handleFormSubmit}>\n                                Guardar\n                        </Button>\n                }\n            </>\n        )\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    const { chosenTareas } = state.actividadTareas;\n    return {\n        chosenTareas\n    }\n}\nexport default connect(mapStateToProps)(FormTareas);","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom'\n\nimport FormTareas from './FormTareas'\n\nfunction Tareas(props) {\n    let { id } = useParams();\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h2>Tareas</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col style={{ border: \"1px solid black\", padding: \"2em\" }}>\n                    <FormTareas actividadId={id}/>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Tareas","import md5 from 'md5'\nexport function getRandomSlug() {\n    const rand = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    return md5(rand);\n}","import React, { Component } from 'react';\nimport { InputGroup, FormControl, Button, Col, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { addElementToExtra } from './redux/actions';\n\nimport { getRandomSlug } from './utils'\n\nclass FormOption extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            elementName: '',\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onKeyPress = this.onKeyPress.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            elementName: e.target.value\n        })\n    }\n\n    async onClick(e) {\n        e.preventDefault();\n        const element = { \"name\": this.state.elementName, \"code\": getRandomSlug() }\n        this.props.dispatch(addElementToExtra(element));\n        this.setState({\n            elementName: ''\n        });\n    }\n\n    onKeyPress(e) {\n        if (e.key === \"Enter\") {\n            if (this.state.elementName !== \"\") {\n                this.onClick(e);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Col>\n                <Row>\n                    <Col>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl type=\"text\" value={this.state.elementName} placeholder=\"Nuevo elemento\" onChange={this.handleChange} onKeyPress={this.onKeyPress} />\n                            <span className=\"input-group-btn\">\n                                <Button variant=\"success\" disabled={this.state.elementName === \"\"} type=\"button\" onClick={this.onClick}>\n                                    Agregar\n                                    </Button>\n                            </span>\n                        </InputGroup>\n                    </Col>\n                </Row>\n            </Col>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { optionsByAttribute } = state\n\n    return {\n        optionsByAttribute\n    }\n}\n\nexport default connect(mapStateToProps)(FormOption);\n\n\n\n\n","import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { removeElementFromExtra } from './redux/actions'\n\nimport ActionList from './ActionList'\nimport FormOption from './FormOption';\n\nclass FormElegirOpcion extends Component {\n\n    onClick = (item) => {\n        this.props.dispatch(removeElementFromExtra(item))\n    }\n\n    render() {\n        const elements = this.props.elements\n        return (\n            <div>\n                <h4>Elegir una opción</h4>\n                <Row>\n                    <Col>\n                        <ActionList items={elements} field={\"name\"} value={\"code\"} action={true} onClick={this.onClick} />\n                    </Col>\n                    <Col />\n                </Row>\n                <Row>\n                    <Col>\n                        <FormOption />\n                    </Col>\n                    <Col />\n                </Row>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { elements } = state.tareaExtra;\n    return {\n        elements,\n    }\n}\n\nexport default connect(mapStateToProps)(FormElegirOpcion);","import React, { Component } from 'react';\nimport { InputGroup, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { addValidElementToExtra } from './redux/actions'\n\nimport Select from './Select';\n\nclass FormValidElements extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedElementId : \"\"\n        }\n    }\n\n    onClick = () => {\n        if (this.state.selectedElementId !== \"\") {\n            this.props.dispatch(addValidElementToExtra(this.state.selectedElementId))\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({\n            selectedElementId: e.target.value\n        })\n    }\n\n    onPropsChangeLess = () => {\n        this.setState({\n            selectedElementId: \"\"\n        })\n    }\n\n    render() {\n        const { elements } = this.props;\n        return (\n            <InputGroup>\n                <Select\n                    defaultValue={\"\"}\n                    placeholder={\"Elegí un elemento\"}\n                    options={elements}\n                    onChange={this.onChange}\n                    onPropsChangeLess={this.onPropsChangeLess}\n                    value={\"code\"}\n                    field={\"name\"}\n                    controlId={\"valids-select\"}\n                />\n                <span>\n                    <Button variant=\"info\" type=\"button\" onClick={this.onClick} disabled={this.state.selectedElementId === \"\"} >\n                        Agregar\n                    </Button>\n                </span>\n            </InputGroup>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { elements } = state.tareaExtra;\n    return {\n        elements,\n    }\n}\n\nexport default connect(mapStateToProps)(FormValidElements);","import React, { Component } from 'react';\nimport { Row, Col, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { removeValidElementFromExtra, removeElementFromExtra, addDepositToElement, removeDepositFromElement } from './redux/actions'\n\nimport ActionList from './ActionList';\nimport FormOption from './FormOption';\nimport FormValidElements from './FormValidElements';\nimport FormCheckInput from 'react-bootstrap/FormCheckInput';\nimport FormCheckLabel from 'react-bootstrap/FormCheckLabel';\n\nimport { TIPO_DEPOSITO } from './config'\n\nclass FormMultipleChoice extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            valid: false\n        }\n    }\n\n    handleCheck = (e) => {\n        this.setState({\n            valid: !this.state.valid\n        })\n    }\n\n    onClickElements = (item) => {\n        this.props.dispatch(removeElementFromExtra(item));\n        this.props.dispatch(removeValidElementFromExtra(item.code));\n    }\n\n    onClickValids = (item) => {\n        this.props.dispatch(removeValidElementFromExtra(item.code))\n    }\n\n    onChangeChecks = (e) => {\n        const codes = e.target.name.split('-');\n        const depositCode = codes[0];\n        const elementCode = codes[1];\n        if (e.target.checked) {\n            this.props.dispatch(addDepositToElement(elementCode, depositCode));\n        } else {\n            this.props.dispatch(removeDepositFromElement(elementCode, depositCode))\n        }\n    }\n\n\n    render() {\n        const { elements, validElements, chosenTareas } = this.props;\n        const depositos = chosenTareas\n            .filter(tarea => tarea.tipo.id === parseInt(TIPO_DEPOSITO))\n            .map(tarea => { return { codigo: tarea.codigo, nombre: tarea.nombre } });\n        return (\n            <div>\n                <h4>{this.props.title}</h4>\n                {\n                    this.props.recoleccion && depositos.length === 0 ?\n                        <>\n                            <Row>\n                                <Col>\n                                    No hay depósitos, agregá tareas de depósito primero\n                                </Col>\n                            </Row>\n                            <br></br>\n                        </>\n                        :\n                        <>\n                            <Row>\n                                <Col>\n                                    {this.props.recoleccion ?\n                                        <ActionList items={elements} field={\"name\"} value={\"code\"} action={true} onClick={this.onClick}\n                                            checkboxGroup={{\n                                                items: depositos, onChange: this.onChangeChecks, label: \"Depósitos\",\n                                                field: \"nombre\", value: \"codigo\"\n                                            }} />\n                                        :\n                                        <ActionList items={elements} field={\"name\"} value={\"code\"} action={true} onClick={this.onClickElements} />\n                                    }\n                                </Col>\n                                <Col />\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <FormOption />\n                                </Col>\n                                <Col />\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Col>\n                                        <InputGroup className=\"mb-3\">\n                                            <FormCheckLabel>\n                                                <FormCheckInput type={\"checkbox\"} onChange={this.handleCheck} />\n                                                Indicar elementos válidos\n                                            </FormCheckLabel>\n                                        </InputGroup>\n                                    </Col>\n                                </Col>\n                                <Col />\n                            </Row>\n\n                            {this.state.valid &&\n                                <>\n                                    <Row>\n                                        <Col>\n                                            <ActionList items={\n                                                validElements.map(item => {\n                                                    return {\n                                                        code: item,\n                                                        name: elements.find(element => element.code === item).name\n                                                    }\n                                                })\n                                            } action={true} onClick={this.onClickValids} value={\"code\"} field={\"name\"} />\n                                        </Col>\n                                        <Col />\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <FormValidElements />\n                                        </Col>\n                                        <Col />\n                                    </Row>\n                                </>\n                            }\n                        </>\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { elements, validElements } = state.tareaExtra;\n    const { chosenTareas } = state.actividadTareas;\n    return {\n        elements,\n        validElements,\n        chosenTareas\n    }\n}\n\nexport default connect(mapStateToProps)(FormMultipleChoice);","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { addByScoreCriterion } from './redux/actions'\n\nimport Input from './Input'\n\nclass FormContador extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            nombre: '',\n            mensaje: ''\n        }\n    }\n\n    onClick = () => {\n        if ((this.state.nombre !== '') && (this.state.mensaje !== '')) {\n            this.props.dispatch(addByScoreCriterion({\n                name: this.state.nombre,\n                message: this.state.mensaje,\n                scores: {}\n            }));\n            this.setState({\n                nombre: '',\n                mensaje: ''\n            })\n        }\n    }\n\n    handleInput = (e) => {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            this.onClick(e);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>Nuevo criterio</h4>\n                <Input value={this.state.nombre} label={\"Nombre\"} placeholder={\"Nombre\"}\n                    controlId={\"formNombre\"} horizontal name={\"nombre\"}\n                    onChange={this.handleInput}\n                />\n                <Input value={this.state.mensaje} label={\"Mensaje\"} placeholder={\"Mensaje\"}\n                    controlId={\"formMensaje\"} horizontal name={\"mensaje\"}\n                    onChange={this.handleInput} onKeyPress={this.onKeyPress}\n                />\n                <Button type=\"button\" variant=\"success\" className=\"float-right\" onClick={this.onClick}\n                    disabled={(this.state.nombre === '') || (this.state.mensaje === '')}>Agregar</Button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { tareaExtra } = state;\n    return {\n        tareaExtra\n    }\n}\n\nexport default connect(mapStateToProps)(FormContador);","import React, { Component } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux'\nimport {\n    removeElementFromExtra, addScoreToCriterion, removeByScoreCriterion,\n    removeScoreFromCriteria\n} from './redux/actions'\n\nimport FormOption from './FormOption';\nimport FormContador from './FormContador';\nimport ActionList from './ActionList';\n\nclass FormContadores extends Component {\n\n    onClick = (item) => {\n        this.props.dispatch(removeElementFromExtra(item));\n        this.props.dispatch(removeScoreFromCriteria(item.code))\n    }\n\n    onClickQuitarLink = (e, item) => {\n        e.preventDefault();\n        this.props.dispatch(removeByScoreCriterion(item));\n    }\n\n    onChange = (e) => {\n        e.preventDefault();\n        const score = {\n            code: e.target.name.split('-')[0],\n            value: e.target.value\n        };\n        const criterionName = e.target.id.split('-')[1];\n        if (e.target.value !== \"\") {\n            this.props.dispatch(addScoreToCriterion(score, criterionName))\n        }\n    }\n\n    render() {\n        const { criterios, elements } = this.props;\n        return (\n            <div>\n                <h3>Contadores</h3>\n                <Row>\n                    <Col>\n                        <FormOption />\n                        <ActionList items={elements} action onClick={this.onClick}\n                            group={\"elements\"} value={\"code\"} field={\"name\"} />\n                    </Col>\n                    <Col></Col>\n                </Row>\n                {criterios.map(item =>\n                    <div key={item.name}>\n                        <h4>{item.name} <Button variant={\"danger\"} onClick={(e) => this.onClickQuitarLink(e, item)}>Quitar</Button></h4>\n                        <i>{item.message}</i>\n                        <Row>\n                            <Col>\n                                <ActionList items={elements}\n                                    input={{ type: \"number\", onChange: this.onChange }}\n                                    group={item.name} value={\"code\"} field={\"name\"} />\n                            </Col>\n                            <Col />\n                        </Row>\n                    </div>)\n                }\n                <Row>\n                    <Col>\n                        <FormContador />\n                    </Col>\n                    <Col />\n                </Row>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { tareaExtra } = state;\n    const { byScore, elements } = tareaExtra;\n    return {\n        criterios: byScore,\n        elements\n    }\n}\nexport default connect(mapStateToProps)(FormContadores);","import React from 'react';\n\nimport FormElegirOpcion from './FormElegirOpcion';\nimport FormMultipleChoice from './FormMultipleChoice';\nimport FormContadores from './FormContadores';\nimport { TIPO_SELECCION, TIPO_MULTIPLE_CHOICE, TIPO_CONTADORES, TIPO_RECOLECCION } from './config';\n\nfunction TareaExtra(props) {\n    switch (props.tipoTarea) {\n        case TIPO_SELECCION:\n            return (\n                <FormElegirOpcion />\n            );\n        case TIPO_MULTIPLE_CHOICE:\n            return (\n                <FormMultipleChoice title={\"Opción múltiple\"}/>\n            );\n        case TIPO_CONTADORES:\n            return (\n                <FormContadores />\n            );\n        case TIPO_RECOLECCION:\n            return (\n                <FormMultipleChoice title={\"Recolección\"} recoleccion/>\n            )\n        default:\n            return null;\n    }\n}\n\nexport default TareaExtra;","import React, { Component } from 'react';\nimport { Form, Button, Col, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addTarea, setCurrentActividad, clearTareaExtra } from './redux/actions';\n\nimport Input from './Input';\nimport SelectAPI from './SelectAPI';\nimport FormDominio from './FormDominio';\nimport TareaExtra from './TareaExtra';\n\nimport { API_BASE_URL, TIPOS_EXTRA, TIPO_SELECCION, TIPO_MULTIPLE_CHOICE, TIPO_CONTADORES, TIPO_RECOLECCION } from './config';\nimport { getRandomSlug } from './utils'\n\nclass FormTarea extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newTarea: {\n                nombre: '',\n                consigna: '',\n                tipo: '',\n                dominio: '',\n                codigo: getRandomSlug()\n            },\n            isLoading: false,\n            success: false,\n            error: false,\n            errorMessage: \"\"\n        }\n        let id = this.props.actividadId;\n        this.setCurrentActividad(id);\n        this.props.dispatch(clearTareaExtra())\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    async setCurrentActividad(id) {\n        const response = await fetch(API_BASE_URL + '/actividades/' + id);\n        const data = await response.json();\n        if (data.errors) {\n            this.setState({\n                error: true,\n                errorMessage: data.errors\n            });\n            return;\n        }\n        this.props.dispatch(setCurrentActividad(data));\n    }\n\n    isEmpty(obj) {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n\n    processExtra(extra, tipo) {\n        switch (tipo) {\n            case TIPO_SELECCION:\n                return {\n                    elements: extra.elements\n                };\n            case TIPO_MULTIPLE_CHOICE:\n                return {\n                    elements: extra.elements,\n                    validElements: extra.validElements\n                };\n            case TIPO_CONTADORES:\n                return {\n                    elements: extra.elements,\n                    byScore: extra.byScore\n                }\n            case TIPO_RECOLECCION:\n                return {\n                    elements: extra.elements,\n                    validElements: extra.validElements\n                }\n            default:\n                break;\n        }\n\n    }\n\n    async handleFormSubmit(e) {\n        const { nombre, consigna, tipo, dominio, codigo } = this.state.newTarea;\n        const { extra } = this.props;\n        e.preventDefault();\n        this.setState({\n            isLoading: true,\n            error: false,\n            errorMessage: ''\n        });\n        if (nombre === \"\") {\n            this.setState({\n                errorMessage: \"Falta nombre\",\n                error: true,\n                isLoading: false,\n            })\n            return;\n        }\n        if (consigna === \"\") {\n            this.setState({\n                errorMessage: \"Falta consigna\",\n                error: true,\n                isLoading: false,\n            })\n            return;\n        }\n        if (tipo === \"\") {\n            this.setState({\n                errorMessage: \"Falta tipo\",\n                error: true,\n                isLoading: false,\n            })\n            return;\n        }\n        if (dominio === \"\") {\n            this.setState({\n                errorMessage: \"Falta dominio\",\n                error: true,\n                isLoading: false,\n            })\n            return;\n        }\n\n        if (TIPOS_EXTRA.includes(tipo)) {\n            if (extra.elements.length === 0) {\n                this.setState({\n                    errorMessage: \"Faltan elementos\",\n                    error: true,\n                    isLoading: false,\n                })\n                return;\n            }\n\n            if (tipo === TIPO_CONTADORES) {\n                let criterionErrors = false\n                extra.byScore.forEach(criterion => {\n                    const settedElements = Object.keys(criterion.scores);\n                    if (settedElements.length < extra.elements.length) {\n                        this.setState({\n                            isLoading: false,\n                            error: true,\n                            errorMessage: \"Falta llenar valores en el criterio \" + criterion.name\n                        });\n                        criterionErrors = true;\n                        return;\n                    }\n                });\n                if (criterionErrors) {\n                    return;\n                }\n            }\n            if (tipo === TIPO_RECOLECCION) {\n                let elementErrors = false;\n                extra.elements.forEach(element => {\n                    if (!element.deposits || element.deposits.length === 0) {\n                        this.setState({\n                            isLoading: false,\n                            error: true,\n                            errorMessage: \"Hay elementos sin depósitos: \" + element.name\n                        });\n                        elementErrors = true;\n                        return\n                    }\n                });\n                if (elementErrors) {\n                    return;\n                }\n            }\n        }\n\n        let response = await fetch(API_BASE_URL + '/tareas', {\n            method: 'POST',\n            body: JSON.stringify({\n                \"nombre\": nombre,\n                \"consigna\": consigna,\n                \"codigo\": codigo,\n                \"tipo\": tipo,\n                \"dominio\": dominio\n            })\n        });\n        const data = await response.json();\n        if (data.errors) {\n            this.setState({\n                isLoading: false,\n                error: true,\n                errorMessage: data.errors\n            });\n            return\n        }\n\n        if (TIPOS_EXTRA.includes(tipo)) {\n\n            const processedExtra = this.processExtra(extra, tipo);\n\n            response = await fetch(API_BASE_URL + '/tareas/' + data.id + '/extra', {\n                method: 'POST',\n                body: JSON.stringify({\n                    \"extra\": processedExtra,\n                })\n            });\n            const extraData = await response.json();\n            if (extraData.errors) {\n                this.setState({\n                    isLoading: false,\n                    error: true,\n                    errorMessage: extraData.errors\n                });\n                return\n            }\n        }\n\n        response = await fetch(API_BASE_URL + '/tareas/' + data.id);\n        const lastData = await response.json();\n\n        this.props.dispatch(addTarea(lastData));\n\n        this.setState({\n            success: true,\n            isLoading: false,\n            error: false,\n            errorMessage: ''\n        });\n    }\n\n    handleInput(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState({\n            newTarea: {\n                ...this.state.newTarea, [name]: value\n            }\n        });\n    }\n\n    onPropsChangeMore = (value) => {\n        const {newTarea} = this.state;\n        newTarea.dominio = value;\n        this.setState({\n            newTarea: newTarea\n        })\n    }\n\n    render() {\n        return (\n            <Form>\n                <Form.Row>\n                    <Col>\n                        <Input controlId={\"formNombre\"}\n                            label={\"Nombre\"}\n                            name={\"nombre\"}\n                            type={\"text\"}\n                            placeholder={\"Nombre\"}\n                            onChange={this.handleInput} />\n                    </Col>\n                    <Col>\n                        <Input controlId={\"formConsigna\"}\n                            label={\"Consigna\"}\n                            name={\"consigna\"}\n                            type={\"text\"}\n                            placeholder={\"Consigna\"}\n                            onChange={this.handleInput} />\n                    </Col>\n                </Form.Row>\n\n                <Form.Row>\n                    <Col>\n                        <SelectAPI\n                            uri={\"/tipos-tarea\"}\n                            attribute={\"tipo\"}\n                            controlId={\"formTipo\"}\n                            label={\"Tipo\"}\n                            name={\"tipo\"}\n                            defaultValue={\"\"}\n                            placeholder={\"Elegí un tipo\"}\n                            onChange={this.handleInput}\n                        />\n                    </Col>\n                    <Col>\n                        <SelectAPI\n                            uri={'/dominios'}\n                            attribute={\"dominio\"}\n                            controlId={\"formDominio\"}\n                            label={\"Dominio\"}\n                            name={\"dominio\"}\n                            defaultValue={\"\"}\n                            placeholder={\"Elegí un dominio\"}\n                            onChange={this.handleInput}\n                            onPropsChangeMore={this.onPropsChangeMore}\n                        />\n                    </Col>\n                </Form.Row>\n                <Form.Row>\n                    <Col></Col>\n                    <FormDominio />\n                </Form.Row>\n\n                <hr />\n\n                <TareaExtra tipoTarea={this.state.newTarea.tipo} />\n\n                {this.state.error &&\n                    <Form.Text className=\"text-danger\" style={{ marginTop: \"-1em\" }}>\n                        {this.state.errorMessage}\n                    </Form.Text>\n                }\n                {this.state.isLoading ?\n                    <Button variant=\"info\" disabled>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                        Cargando...\n                    </Button>\n                    :\n                    this.state.success ?\n                        <Link to={\"/actividad/\" + this.props.currentActividad.id}>\n                            <Button variant=\"primary\" type=\"button\" >Continuar</Button>\n                        </Link>\n                        :\n                        <Button variant=\"info\" type=\"button\" disabled={this.state.success} onClick={this.handleFormSubmit}>\n                            Guardar\n                        </Button>\n                }\n            </Form>\n\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { currentActividad } = state.actividad;\n    const extra = state.tareaExtra;\n    return {\n        currentActividad,\n        extra\n    }\n}\n\nexport default connect(mapStateToProps)(FormTarea);","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom'\n\nimport FormTarea from './FormTarea'\n\nfunction Tarea(props) {\n    let { id } = useParams();\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h2>Tarea</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col style={{ border: \"1px solid black\", padding: \"2em\" }}>\n                    <FormTarea actividadId={id}/>\n                </Col>\n            </Row>\n        </Container >\n    )\n}\n\nexport default Tarea","import * as React from 'react';\n\nexport const NODE_KEY = 'id'; // Key used to identify nodes\n\n// These keys are arbitrary (but must match the config)\n// However, GraphView renders text differently for empty types\n// so this has to be passed in if that behavior is desired.\nexport const EMPTY_TYPE = 'customEmpty'; // Empty node type\nexport const OPTIONAL_EMPTY_TYPE = 'optionalEmpty'\nexport const END_TYPE = 'end';\nexport const OPTIONAL_END_TYPE = 'optionalEnd';\nexport const START_TYPE = 'start';\nexport const OPTIONAL_START_TYPE = 'optionalStart';\nexport const EMPTY_EDGE_TYPE = 'emptyEdge';\nexport const SQUARE_EDGE_TYPE = 'squareEdge';\n\nexport const nodeTypes = [EMPTY_TYPE, OPTIONAL_EMPTY_TYPE, END_TYPE, OPTIONAL_END_TYPE, START_TYPE, OPTIONAL_START_TYPE ];\nexport const edgeTypes = [EMPTY_EDGE_TYPE, SQUARE_EDGE_TYPE];\n\nconst EmptyNodeShape = (\n  <symbol viewBox=\"0 0 154 154\" width=\"154\" height=\"154\" id=\"emptyNode\">\n    <circle cx=\"77\" cy=\"77\" r=\"56\" />\n  </symbol>\n);\n\nconst OptionalEmptyNodeShape = (\n  <symbol viewBox=\"0 0 154 154\" width=\"154\" height=\"154\" id=\"optionalEmptyNode\" fill=\"#ebebe0\" >\n    <circle cx=\"77\" cy=\"77\" r=\"56\" />\n  </symbol>\n);\n\nconst StartShape = (\n  <symbol viewBox=\"0 0 160 160\" width=\"160\" height=\"160\" id=\"start\">\n    <circle cx=\"77\" cy=\"77\" r=\"56\" stroke=\"green\" strokeWidth=\"3px\" />\n  </symbol>\n);\n\nconst OptionalStartShape = (\n  <symbol viewBox=\"0 0 160 160\" width=\"160\" height=\"160\" id=\"optionalStart\">\n    <circle cx=\"77\" cy=\"77\" r=\"56\" stroke=\"green\" strokeWidth=\"3px\" fill=\"#ebebe0\" />\n  </symbol>\n)\n\n//triggerShape\nconst OptionalTriggerShape = (\n  <symbol viewBox=\"0 0 160 160\" width=\"160\" height=\"160\" id=\"start\">\n    <circle cx=\"77\" cy=\"77\" r=\"56\" stroke=\"green\" strokeWidth=\"3px\" fill=\"#ebebe0\" />\n    <path fill=\"orange\" d=\"m 105,85 12.23866,0.0477 -10.89815,12.91207 12.63192,0.0395 -34.4828,25.47706 15.35055,-19.99263 -11.04267,-0.0851 z\" />\n  </symbol>\n);\n\nconst EndShape = (\n  <symbol viewBox=\"0 0 160 160\" width=\"160\" height=\"160\" id=\"end\">\n    <circle cx=\"77\" cy=\"77\" r=\"56\" stroke=\"red\" strokeWidth=\"3px\" />\n  </symbol>\n);\n\nconst OptionalEndShape = (\n  <symbol viewBox=\"0 0 160 160\" width=\"160\" height=\"160\" id=\"optionalEnd\" fill=\"#ebebe0\">\n    <circle cx=\"77\" cy=\"77\" r=\"56\" stroke=\"red\" strokeWidth=\"3px\" />\n  </symbol>\n);\n\nconst EmptyEdgeShape = (\n  <symbol viewBox=\"0 0 50 50\" id=\"emptyEdge\">\n    <circle cx=\"25\" cy=\"25\" r=\"8\" fill=\"currentColor\" />\n  </symbol>\n);\n\nconst SquareEdgeShape = (\n  <symbol viewBox=\"0 0 50 50\" id=\"squareEdge\">\n    <rect x=\"10\" y=\"17\" width=\"15\" height=\"15\" fill=\"currentColor\"/>\n  </symbol>\n)\n\nexport default {\n  EdgeTypes: {\n    emptyEdge: {\n      shape: EmptyEdgeShape,\n      shapeId: '#emptyEdge',\n    },\n    squareEdge: {\n      shape: SquareEdgeShape,\n      shapeId: \"#squareEdge\"\n    }\n  },\n  NodeSubtypes: {\n  },\n  NodeTypes: {\n    emptyNode: {\n      shape: EmptyNodeShape,\n      shapeId: '#emptyNode',\n      typeText: 'Tarea',\n    },\n    optionalEmptyNode: {\n      shape: OptionalEmptyNodeShape,\n      shapeId: '#optionalEmptyNode',\n      typeText: 'Tarea'\n    },\n    start: {\n      shape: StartShape,\n      shapeId: '#start',\n      typeText: 'Inicio',\n    },\n    optionalStart: {\n      shape: OptionalStartShape,\n      shapeId: '#optionalStart',\n      typeText: 'Inicio',\n    },\n    end: {\n      shape: EndShape,\n      shapeId: '#end',\n      typeText: 'Fin',\n    },\n    optionalEnd: {\n      shape: OptionalEndShape,\n      shapeId: '#optionalEnd',\n      typeText: 'Fin',\n    }\n  },\n};\n","import * as React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport {\n  GraphView,\n  IEdgeType as IEdge,\n  type INodeType as INode,\n  type LayoutEngineType,\n} from 'react-digraph';\n\nimport GraphConfig, {\n  EMPTY_EDGE_TYPE,\n  EMPTY_TYPE,\n  OPTIONAL_EMPTY_TYPE,\n  START_TYPE,\n  OPTIONAL_START_TYPE,\n  END_TYPE,\n  OPTIONAL_END_TYPE,\n  SQUARE_EDGE_TYPE,\n  NODE_KEY,\n} from './graph-config'; // Configures node/edge types\nimport { API_BASE_URL } from './config';\ntype IGraph = {\n  nodes: INode[],\n  edges: IEdge[],\n};\n\ntype IGraphProps = {};\n\ntype IGraphState = {\n  graph: any,\n  selected: any,\n  copiedNode: any,\n  layoutEngineType?: LayoutEngineType,\n};\n\nfunction getGraph(tareas) {\n  const nodes = tareas.map((tarea, index) => {\n    return {\n      id: tarea.id,\n      title: tarea.graphId,\n      optional: tarea.optional,\n      type: tarea.optional ? OPTIONAL_START_TYPE : START_TYPE\n    }\n  })\n  return {\n    edges: [],\n    nodes: nodes\n  }\n}\n\nfunction getNodesWithTypeUpdated(nodes, edges) {\n  const neighbours = edges.map(edge => edge.target);\n  const sources = edges.map(edge => edge.source);\n  const newNodes = nodes.map(node => {\n    if (!neighbours.includes(node.id)) {\n      return {\n        ...node,\n        type: node.optional ? OPTIONAL_START_TYPE : START_TYPE\n      };\n    }\n    else if (!sources.includes(node.id)) {\n      return {\n        ...node,\n        type: node.optional ? OPTIONAL_END_TYPE : END_TYPE\n      };\n    }\n    else {\n      return {\n        ...node,\n        type: node.optional ? OPTIONAL_EMPTY_TYPE : EMPTY_TYPE\n      }\n    }\n  });\n  return newNodes;\n}\n\nclass Graph extends React.Component<IGraphProps, IGraphState> {\n  GraphView;\n\n  constructor(props: IGraphProps) {\n    super(props);\n\n    this.state = {\n      layoutEngineType: \"HorizontalTree\",\n      selected: null,\n      graph: { nodes: [], edges: [] }\n    };\n\n    this.GraphView = React.createRef();\n  }\n\n  // Helper to find the index of a given node\n  getNodeIndex(searchNode: INode | any) {\n    return this.state.graph.nodes.findIndex(node => {\n      return node[NODE_KEY] === searchNode[NODE_KEY];\n    });\n  }\n\n  // Helper to find the index of a given edge\n  getEdgeIndex(searchEdge: IEdge) {\n    return this.state.graph.edges.findIndex(edge => {\n      return (\n        edge.source === searchEdge.source && edge.target === searchEdge.target\n      );\n    });\n  }\n\n  // Given a nodeKey, return the corresponding node\n  getViewNode(nodeKey: string) {\n    const searchNode = {};\n\n    searchNode[NODE_KEY] = nodeKey;\n    const i = this.getNodeIndex(searchNode);\n\n    return this.state.graph.nodes[i];\n  }\n\n  /*\n   * Handlers/Interaction\n   */\n\n  // Called by 'drag' handler, etc..\n  // to sync updates from D3 with the graph\n  onUpdateNode = () => { };\n\n  // Node 'mouseUp' handler\n  onSelectNode = (viewNode: INode | null) => {\n    if (viewNode != null) {\n      this.props.onClickNode(viewNode.id);\n    }\n  };\n\n  // Edge 'mouseUp' handler\n  onSelectEdge = (viewEdge: IEdge) => {\n    if (viewEdge != null) {\n      this.props.onClickEdge(viewEdge.id);\n    }\n  };\n\n  // Updates the graph with a new node\n  onCreateNode = () => { };\n\n  // Deletes a node from the graph\n  onDeleteNode = () => { };\n\n  onConnect = () => { }\n\n  // Creates a new node between two edges\n  onCreateEdge = () => { };\n\n  // Called when an edge is reattached to a different target.\n  onSwapEdge = () => { };\n\n  // Called when an edge is deleted\n  onDeleteEdge = () => { };\n\n\n  outputJumps = () => {\n    const actividadId = this.props.actividadId;\n    const { nodes, edges } = this.state.graph;\n    const codesById = {};\n    this.props.tareas.forEach(tarea => codesById[tarea.id] = tarea.codigo);\n    const graphNodes = {};\n    nodes.forEach(node => { graphNodes[node.id] = [] });\n    edges.forEach(edge => {\n      graphNodes[edge.source].push(edge);\n    })\n    this.props.tareas.forEach(tarea => {\n      const jumps = graphNodes[tarea.id];\n      const forcedJumps = jumps.filter(jump => jump.on === undefined).map(jump => jump.target);\n      this.saveForcedJumps(tarea.id, forcedJumps, actividadId);\n      //TODO: save conditional jumps, prevent empty jumps from saving when conditional jumps are present\n    })\n  }\n\n  async saveForcedJumps(tareaId, jumps, id) {\n    console.log(jumps); return;\n    const response = await fetch(API_BASE_URL + '/actividades/' + id + '/saltos', {\n      method: 'GET',\n      body: JSON.stringify({\n        \"origen\": tareaId,\n        \"condicion\": \"ALL\",\n        \"destinos\": jumps\n      })\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { tareas, conexiones } = nextProps;\n    const prevNodes = prevState.graph.nodes;\n    const prevEdges = prevState.graph.edges;\n    if ((tareas.filter(tarea => tarea.optional)).length !== prevNodes.filter(node => node.optional) ||\n      (tareas.length !== prevNodes.length) || (conexiones.length !== prevEdges.length)) {\n      const newGraph = getGraph(tareas);\n      let newNodes = newGraph.nodes.map(node => {\n        const nodeIndex = prevNodes.findIndex(prevNode => node[NODE_KEY] === prevNode[NODE_KEY]);\n        if (nodeIndex === -1) {\n          //check for better positioning\n          return {\n            ...node,\n            x: 100,\n            y: 100 + 150 * (node.title - 1)\n          }\n        } else {\n          if (node.optional !== prevNodes[nodeIndex].optional) {\n            return {\n              ...prevNodes[nodeIndex],\n              optional: node.optional\n            }\n          } else {\n            return prevNodes[nodeIndex];\n          }\n        }\n      })\n      const newEdges = conexiones.map(conexion => {\n        return {\n          source: conexion.origen,\n          target: conexion.destino,\n          on: conexion.condicion,\n          answer: conexion.respuesta,\n          type: conexion.condicion ? SQUARE_EDGE_TYPE : EMPTY_EDGE_TYPE,\n          id: conexion.id\n        }\n      })\n      const nodeIds = newNodes.map(node => node[NODE_KEY]);\n\n      //keep only connected edges\n      newGraph.edges = newEdges.filter(edge =>\n        nodeIds.includes(edge.source) && nodeIds.includes(edge.target)\n      )\n      newGraph.nodes = getNodesWithTypeUpdated(newNodes, newGraph.edges);\n\n      return {\n        graph: newGraph\n      }\n    } else {\n      return null\n    }\n  }\n\n  /*\n   * Render\n   */\n\n  render() {\n    const { nodes, edges } = this.state.graph;\n    const selected = this.state.selected;\n    const { NodeTypes, NodeSubtypes, EdgeTypes } = GraphConfig;\n\n    return (\n      <div id=\"graph\" style={{ height: \"26em\" }}>\n        <GraphView\n          ref={el => (this.GraphView = el)}\n          nodeKey={NODE_KEY}\n          nodes={nodes}\n          edges={edges}\n          selected={selected}\n          nodeTypes={NodeTypes}\n          nodeSubtypes={NodeSubtypes}\n          edgeTypes={EdgeTypes}\n          onSelectNode={this.onSelectNode}\n          onCreateNode={this.onCreateNode}\n          onUpdateNode={this.onUpdateNode}\n          onDeleteNode={this.onDeleteNode}\n          onSelectEdge={this.onSelectEdge}\n          onCreateEdge={this.onCreateEdge}\n          onSwapEdge={this.onSwapEdge}\n          onDeleteEdge={this.onDeleteEdge} HorizontalTree\n          onUndo={this.onUndo}\n          onCopySelected={this.onCopySelected}\n          onPasteSelected={this.onPasteSelected}\n          layoutEngineType={this.state.layoutEngineType}\n        />\n        <Button type=\"button\" className=\"float-right\" variant=\"success\" onClick={this.outputJumps} >Exportar saltos</Button>\n\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n","import React from 'react';\nimport FormCheckLabel from 'react-bootstrap/FormCheckLabel';\nimport FormCheckInput from 'react-bootstrap/FormCheckInput';\n\nfunction CheckBox(props) {\n    return (\n        <FormCheckLabel style={{ marginLeft: \"1.25rem\" }}>\n            <FormCheckInput type={\"checkbox\"} checked={props.checked}\n                onChange={props.onChange} />\n            <span>{props.label}</span>\n        </FormCheckLabel>\n    )\n}\nexport default CheckBox;","import React, { Component } from 'react';\nimport memoize from 'memoize-one'\nimport { Modal, Button, Card, Row, Col } from 'react-bootstrap';\nimport Select from './Select';\nimport CheckBox from './CheckBox';\nimport { TIPOS_OPCIONES, CONDITIONS_ARRAY, TASK_CONDITIONS_ARRAY } from './config';\nimport md5 from 'md5';\n\nclass ModalTarea extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showConexiones: false,\n            showCondicion: false,\n            selectedSiguiente: null,\n            agregarConexionDisabled: true,\n            selectedCondition: null,\n            selectedAnswerTask: null\n        }\n    }\n\n    filterSiguientes = memoize(\n        (conexiones, idTarea) => conexiones.filter(conexion => conexion.origen === idTarea)\n    );\n\n    findTarea = memoize(\n        (tareaId, tareas) => tareas.find(tarea => tarea.id === tareaId)\n    )\n\n    onInicialChange = () => {\n        const { tarea } = this.props;\n        tarea.initial = !tarea.initial;\n        this.props.onUpdateTarea(tarea);\n    }\n\n    onOptionalChange = () => {\n        const { tarea } = this.props;\n        tarea.optional = !tarea.optional;\n        this.props.onUpdateTarea(tarea);\n    }\n\n    onClickMostrarConexiones = () => {\n        this.setState({\n            showConexiones: !this.state.showConexiones\n        })\n    }\n\n    onCondicionCheckboxChange = () => {\n        //if it wasn't checked (and now it is)\n        if (!this.state.showCondicion) {\n            this.setState({\n                agregarConexionDisabled: true\n            })\n        }\n        this.setState({\n            showCondicion: !this.state.showCondicion\n        })\n    }\n\n    onConexionChange = (e) => {\n        const index = e.nativeEvent.target.selectedIndex;\n        const origenName = e.nativeEvent.target[index].text\n        this.setState({\n            selectedSiguiente: { id: parseInt(e.target.value), name: origenName },\n            agregarConexionDisabled: false\n        })\n    }\n\n    onCondicionSelectChange = (e) => {\n        const index = e.nativeEvent.target.selectedIndex;\n        const condicionName = e.nativeEvent.target[index].text\n        this.setState({\n            selectedCondition: { code: e.target.value, name: condicionName },\n            agregarConexionDisabled: true\n        })\n    }\n\n    onAnswerTaskChange = (e) => {\n        const index = e.nativeEvent.target.selectedIndex;\n        const answerTaskName = e.nativeEvent.target[index].text\n        this.setState({\n            selectedAnswerTask: { id: e.target.value, name: answerTaskName },\n            agregarConexionDisabled: false\n        })\n\n    }\n\n    onClickAgregarConexion = () => {\n        const conexion = this.state.selectedSiguiente;\n        if (this.state.showCondicion) {\n            conexion.condicion = this.state.selectedCondition\n            conexion.respuesta = this.state.selectedAnswerTask;\n        }\n\n        conexion.origen = this.props.tarea.id;\n        conexion.destino = conexion.id;\n        conexion.id = md5(conexion.origen + \"_\" + conexion.destino + (conexion.condicion ? \"_\" + conexion.condicion + \"_\" + conexion.respuesta : \"\"));\n        this.props.onAddConexion(conexion);\n        this.props.handleClose();\n    }\n\n    getSelectableTareas = () => {\n        const conexionesSiguientes = this.filterSiguientes(this.props.conexiones, this.props.tarea.id);\n        const selectableTareas = this.props.tareas.filter(tarea => tarea.id !== this.props.tarea.id && conexionesSiguientes.findIndex(conexion => conexion.destino === tarea.id) === -1);\n        return selectableTareas;\n    }\n\n    tareaHasOptions = () => {\n        return TIPOS_OPCIONES.includes(this.props.tarea.tipo.id.toString());\n    }\n\n    getAnswerTaskLabel = () => {\n        if (this.state.selectedCondition) {\n            switch (this.state.selectedCondition.code) {\n                case \"YES\":\n                case \"NO\":\n                    return \"la opción\";\n                case \"YES_START\":\n                case \"NO_START\":\n                    return \"la tarea\";\n            }\n        } else return \"la opción/tarea...\"\n\n    }\n\n    getAnswerTareaSelect = () => {\n        if (this.state.selectedCondition) {\n            switch (this.state.selectedCondition.code) {\n                case \"YES\":\n                case \"NO\":\n                    return (\n                        <Select key={this.state.selectedCondition.code} options={this.props.tarea.extra.elements} defaultValue={\"\"} value={\"code\"} field={\"name\"}\n                            placeholder={\"Elegir...\"} onChange={this.onAnswerTaskChange} />\n                    );\n                case \"YES_START\":\n                case \"NO_START\":\n                    return (\n                        <Select key={this.state.selectedCondition.code} options={this.props.tareas} defaultValue={\"\"} value={\"id\"} field={\"nombre\"}\n                            placeholder={\"Elegir...\"} onChange={this.onAnswerTaskChange} />\n                    );\n            }\n        } else {\n            return (\n                <Select options={[]} defaultValue={\"\"} placeholder={\"Elegir...\"} />\n            )\n        }\n    }\n\n    render() {\n        const { tarea, show } = this.props;\n        return (\n            <Modal show={show} onHide={this.props.handleClose} animation={false} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Tarea seleccionada: {tarea.nombre}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Card body>\n                        <p>{tarea.consigna}</p>\n                        <Row>\n                            <Col>\n                                <CheckBox checked={tarea.optional} onChange={this.onOptionalChange} label={\"Opcional\"} />\n                                <br />\n                                <CheckBox checked={tarea.initial} onChange={this.onInicialChange} label={\"Inicial\"} />\n                            </Col>\n                            <Col>\n                                {!this.state.showConexiones && <Button variant=\"primary\" onClick={this.onClickMostrarConexiones} >Agregar conexiones</Button>}\n                            </Col>\n                        </Row>\n                        {this.state.showConexiones && this.getSelectableTareas().length > 0 &&\n                            <Card body>\n                                <h5>Agregar conexión</h5>\n                                <Row>\n                                    <Col>\n                                        <span>Hacia la tarea...</span>\n                                    </Col>\n                                    <Col>\n                                        <Select options={this.getSelectableTareas()} field={\"nombre\"} value={\"id\"} defaultValue={\"\"}\n                                            placeholder={\"Elegir siguiente\"} onChange={this.onConexionChange} />\n                                    </Col>\n                                </Row>\n\n                                {this.state.selectedSiguiente &&\n                                    <Row>\n                                        <Col md={6}>\n                                            <CheckBox checked={this.state.showCondicion} onChange={this.onCondicionCheckboxChange} label={\"Mostrar condición\"} />\n                                        </Col>\n                                    </Row>}\n                                {this.state.showCondicion &&\n                                    <>\n                                        <Row>\n                                            <Col>Cuando...</Col>\n                                            <Col>\n                                                <Select options={ this.tareaHasOptions() ? CONDITIONS_ARRAY : TASK_CONDITIONS_ARRAY} defaultValue={\"\"} value={\"code\"} field={\"name\"}\n                                                    placeholder={\"Elegir...\"} onChange={this.onCondicionSelectChange} />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>{this.getAnswerTaskLabel()}</Col>\n                                            <Col>\n                                                {this.state.selectedSiguiente &&\n                                                    this.getAnswerTareaSelect()\n                                                }\n                                            </Col>\n                                        </Row>\n                                    </>\n                                }\n                                <Button variant=\"success\" className=\"float-right\" disabled={this.state.agregarConexionDisabled}\n                                    onClick={this.onClickAgregarConexion}>Agregar conexión</Button>\n                            </Card>\n                        }\n                    </Card>\n                </Modal.Body>\n            </Modal>\n        )\n    }\n}\n\nexport default ModalTarea;","import React from 'react';\nimport { Modal, Card, Button } from 'react-bootstrap';\n\nfunction getTareaById(tareas, id) {\n    return tareas.find(tarea => tarea.id === id);\n}\n\nfunction ModalConexion({ show, conexion, handleClose, tareas }) {\n    return (\n        <Modal show={show} onHide={handleClose} animation={false} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>Conexión</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Card body>\n                    Desde la tarea <b>\"{getTareaById(tareas, conexion.origen).nombre}\"</b> hacia la tarea\n                    {\" \"}<b>\"{getTareaById(tareas, conexion.destino).nombre}\"</b>\n                    {conexion.condicion &&\n                        <span>{\" \"}cuando <b>{conexion.condicion.name}</b> la {[\"YES\",\"NO\"].includes(conexion.condicion.code) ? \"opción\" : \"tarea\"} <b>{conexion.respuesta.name}</b></span>\n                    }\n                </Card>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\">Quitar conexión</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default ModalConexion;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { setCurrentActividad } from './redux/actions'\n\n\nimport Graph from './Graph';\n\nimport { API_BASE_URL } from './config'\nimport ModalTarea from './ModalTarea';\nimport ModalConexion from './ModalConexion';\n\nclass FlujoTareas extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            success: false,\n            graphTareas: [],\n            graphConexiones: [],\n            showTarea: false,\n            showConexion: false,\n            selectedTarea: null,\n            selectedConexion: null\n        }\n        this.setCurrentActividad(props.match.params.id);\n        this.loadTareasForActividad(props.match.params.id);\n        this.Graph = React.createRef();\n    }\n\n    onUpdateTarea = (tarea) => {\n        this.setState({\n            graphTareas: [...this.state.graphTareas.map(t => t.id === tarea.id ? tarea : t)]\n        })\n    }\n\n    onAddConexion = (newConexion) => {\n        this.setState({\n            graphConexiones: [...this.state.graphConexiones.filter(conexion => conexion.id !== newConexion.id), newConexion]\n        })\n    }\n\n    onResetSaltos = (tareaId) => {\n        const newSaltos = this.state.graphConexiones.filter(\n            conexion =>\n                conexion.origen !== tareaId &&\n                conexion.destino !== tareaId)\n        this.setState({\n            graphConexiones: [...newSaltos]\n        })\n    }\n\n    onRemoveConexion = (conexion) => {\n        const conexiones = this.state.graphConexiones;\n        const newConexiones = conexiones.filter(con => con.id !== conexion.id);\n        this.setState({\n            graphConexiones: [...newConexiones]\n        })\n    }\n\n    async loadTareasForActividad(id) {\n        const response = await fetch(API_BASE_URL + '/actividades/' + id + '/tareas');\n        const data = await response.json();\n        if (data.errors) {\n            this.setState({\n                error: true,\n                errorMessage: data.errors\n            })\n            return;\n        }\n        const tareas = data.map((tarea, index) => {\n            return {\n                ...tarea,\n                nombre: (index + 1) + \". \" + tarea.nombre,\n                id: tarea.id,\n                graphId: index + 1,\n                optional: false,\n                initial: false,\n                saltos: []\n            }\n        })\n        this.setState({\n            graphTareas: tareas,\n            success: true\n        });\n    }\n\n    async setCurrentActividad(id) {\n        const response = await fetch(API_BASE_URL + '/actividades/' + id);\n        const data = await response.json();\n        if (data.errors) {\n            this.setState({\n                error: true,\n                errorMessage: data.errors\n            });\n            return;\n        }\n        this.props.dispatch(setCurrentActividad(data));\n    }\n\n    handleShowTarea = (tareaId) => {\n        const tarea = this.state.graphTareas.find(tarea => tarea.id === tareaId);\n        this.setState({\n            showTarea: true,\n            selectedTarea: tarea\n        })\n    }\n\n    handleCloseTarea = () => {\n        this.setState({\n            showTarea: false,\n            selectedTarea: null\n        })\n    }\n\n    handleShowConexion = (conexionId) => {\n        const conexion = this.state.graphConexiones.find(conexion => conexion.id === conexionId);\n        this.setState({\n            showConexion: true,\n            selectedConexion: conexion\n        })\n    }\n\n    handleCloseConexion = () => {\n        this.setState({\n            showConexion: false,\n            selectedConexion: null\n        })\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <h2>Planificación de tareas</h2>\n                        <h6 style={{ color: 'gray' }}><i>\n                            {this.state.graphConexiones.length === 0 ?\n                                \"Para iniciar la conexión entre tareas selecione una tarea incial\"\n                                : \"Para conectar dos tareas seleccione una tarea\"\n                            }\n                        </i></h6>\n                    </Col>\n                </Row>\n                <Row style={{ border: \"1px solid black\", paddingTop: \"2em\", paddingBottom: \"2em\" }}>\n                    <Col>\n                        {this.state.success && <Graph ref={el => (this.Graph = el)} tareas={this.state.graphTareas}\n                            conexiones={this.state.graphConexiones} actividadId={this.props.match.params.id}\n                            onClickNode={this.handleShowTarea} onClickEdge={this.handleShowConexion} />}\n                        {this.state.selectedTarea &&\n                            <ModalTarea key={this.state.selectedTarea.id} handleClose={this.handleCloseTarea}\n                                show={this.state.showTarea} tarea={this.state.selectedTarea} tareas={this.state.graphTareas}\n                                conexiones={this.state.graphConexiones} onUpdateTarea={this.onUpdateTarea} onAddConexion={this.onAddConexion}\n                            />}\n                        {this.state.selectedConexion &&\n                            <ModalConexion key={this.state.selectedConexion.id} handleClose={this.handleCloseConexion}\n                                show={this.state.showConexion} conexion={this.state.selectedConexion} tareas={this.state.graphTareas}\n                                onRemoveConexion={this.onRemoveConexion} />\n                        }\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { currentActividad } = state.actividad;\n    const { chosenTareas } = state.actividadTareas;\n    return {\n        currentActividad,\n        chosenTareas\n    }\n}\nexport default connect(mapStateToProps)(FlujoTareas);","import React, { Component } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport { API_BASE_URL } from './config';\n\nclass ShowActividad extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            actividad: null,\n            tareas: [],\n            errors: false\n        }\n        this.getActividad = this.getActividad.bind(this);\n        this.getTareas = this.getTareas.bind(this);\n        this.getActividad();\n        this.getTareas();\n    }\n\n    async getActividad() {\n        const response = await fetch(API_BASE_URL + '/actividades/' + this.props.actividadId);\n        const data = await response.json();\n        if (!data.errors) {\n            this.setState({\n                actividad: data\n            })\n        } else {\n            this.setState({\n                errors: true\n            })\n        }\n    }\n\n    async getTareas() {\n        const response = await fetch(API_BASE_URL + '/actividades/' + this.props.actividadId + '/tareas');\n        const data = await response.json();\n        if (!data.errors) {\n            this.setState({\n                tareas: data\n            })\n        } else {\n            this.setState({\n                errors: true\n            })\n        }\n    }\n\n    render() {\n        const { actividad, tareas, errors } = this.state;\n        return (\n            <>\n                {\n                    actividad &&\n                    <>\n                        <Row>\n                            <Col>Nombre: {actividad.nombre}</Col>\n                        </Row>\n                        <Row>\n                            <Col>Objetivo: {actividad.objetivo}</Col>\n                        </Row>\n                        <Row>\n                            <Col>Idioma: {actividad.idioma.nombre}</Col>\n                        </Row>\n                        <Row>\n                            <Col>Dominio: {actividad.dominio.nombre}</Col>\n                        </Row>\n                        <Button href={API_BASE_URL + \"/actividades/\" + actividad.id + \"/download\"}>Descargar</Button>\n                        <hr />\n                        <Row>\n                            <Col>\n                                <legend>Tareas</legend>\n                                <ul>\n                                    {tareas.map(tarea =>\n                                        <li>{tarea.nombre}</li>\n                                    )}\n                                </ul>\n                            </Col>\n                        </Row>\n                    </>\n                }\n                {errors && <legend>Actividad no encontrada</legend>}\n            </>\n        )\n    }\n}\n\nexport default ShowActividad;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport ShowActividad from './ShowActividad';\n\n\nfunction ResolverActividad() {\n    const { id } = useParams();\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h2>Actividad</h2>\n                </Col>\n            </Row>\n            <Row>\n                <Col style={{ border: \"1px solid black\", padding: \"2em\" }}>\n                    <ShowActividad actividadId={id} />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default ResolverActividad;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport { API_BASE_URL } from './config';\n\nclass ListaActividades extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            actividades: []\n        }\n        this.getActividades = this.getActividades.bind(this);\n        this.getActividades();\n    }\n\n    async getActividades() {\n        const response = await fetch(API_BASE_URL + '/actividades');\n        const data = await response.json();\n        this.setState({\n            actividades: data\n        })\n    }\n    render() {\n        return (\n            <ul>\n                {this.state.actividades.map(actividad =>\n                    <Link to={'/actividad/' + actividad.id + '/mostrar'}>\n                        <li>{actividad.nombre}</li>\n                    </Link>\n                )}\n            </ul>\n        )\n    }\n}\n\nexport default ListaActividades;","import React from 'react';\nimport { Route, HashRouter, BrowserRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap'\n\nimport Menu from './Menu'\nimport Home from './Home'\nimport Actividad from './Actividad'\nimport Tareas from './Tareas'\nimport Tarea from './Tarea'\nimport FlujoTareas from './FlujoTareas';\nimport ResolverActividad from './ResolverActividad';\nimport ListaActividades from './ListaActividades';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Menu />\n      <Container style={{ marginTop: '1em' }}>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/nuevaActividad\" exact component={Actividad} />\n        <Route path=\"/actividad/:id\" exact component={Tareas} />\n        <Route path=\"/actividad/:id/nuevaTarea\" exact component={Tarea} />\n        <Route path=\"/actividad/:id/flujo\" exact component={FlujoTareas} />\n        <Route path=\"/actividades\" exact component={ListaActividades} />\n        <Route path=\"/actividad/:id/mostrar\" exact component={ResolverActividad} />\n      </Container>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport reducer from './redux/index'\n\nimport App from './App';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = [thunk]\nconst store = createStore(\n    reducer,\n    composeEnhancers(\n        applyMiddleware(...middleware)\n    )\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}